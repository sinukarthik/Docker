  Docker -----
write a docker file - it will tells how to create a image and what are all the dependency it wants 
cmd to build a image 
- docker build -t <container_id/name> <path>
cmd to run a container if we have image ready 
- docker run -p <hostport:application_port> -volumes <volume_name:/data> <container_id/name>
to enter into container and do changes 
-docker exec -itd <container_name_or_id> <command>
eg 
docker exec -it <container_name> bash
docker exec -it my_container ls /app
General cmd:
-docker logs -f my_container
-docker ps  -a #it will list container #-a list the stopped container also
-docker images



Kubernetes--------
Installing minikube (minikube start/stop) for handson becaus it act as both master and worker node.
kubernets componetes
control plane/ master node                                                            Worker node
1. API server (communicate with Workernode - heart)                                   1.Kubelet (it is like a spy it update the pods detail and everything to api server)
2. ETCD (database - brain )                                                           2.Container Runtime (kubelet will create and terminate container using this runtime)
3. control manager (replicaset manager, Endpoint manager, service manager) 
it checks the desired state and actual state
4. Scheduler - it check for available node like load balancer 

Cluster -> node -> pods

cluster is nothing but have a collection of node having both master and worker node.
Node is nothing but a server
pods  is smallest deployable unit in worker node it has 1 or more containers, inside pod  it will share network and storage , each pod have different ip it was isolated.

Write pod,service, replicas yaml file.
-kubectl apply -f <filename.yml>  -f is file name
-kubectl get pods  / kubectl delete pods <pod_name>
-kubectl get images/rs/services  (replicaset - rs)
-minikube service mario-service --url  (#to get service use this cmd minikube service mario-service --url op:http://127.0.0.1:49394)

kube-proxy (present in every node) -it is like a table hold( stable ip + endpoint ip's of pod)
it help to forward the request from service.yml using the mentioned label selector
endpoint is an kubernetes object it hold the pod ip's (pod ip is ephemeral-change everytime newly created)
endpoint communicate with controller manager(i.e endpoint controller)


Git-----------
git --version
git init
git add .
git commit -m "comment"
git config --global user.name"sinukarthik"
git remote add  origin https://github.com/sinukarthik/Docker.git
git push -u origin main
git config --global user.name "SinuKarthik" 
git config --global user.email "sinuartzz@gmail.com"
git push -u origin main









